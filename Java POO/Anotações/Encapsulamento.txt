Encapsulamento:

<<interface>>
Controlador
ligar()
desligar()
abrirMenu()
fecharMenu()
maisVolume()
menosVolume()
ligarMudo()
desligarMudo()
play()
pause()

Método abstrato: vai existir esse método, independente da razão para ele existir. 

Todos os métodos são públicos na interface.

- Definir classe.
- Atributos NUNCA públicos, apenas privados ou públicos.

ControleRemoto -> Controlador (classe ControleRemoto IMPLEMENTA Controlador)
private int volume
private boolean ligado
private boolean tocando

- Definir getters and setters (privados). Apenas a interface(controlador) será pública - é recomendável que todo get e set seja público.


- Interface é um arquivo separado

interface Controlador
	public abstract Ligar()
	public abstract Desligar()
	public abstract abrirMenu()
	public abstract fecharMenu()
	public abstract maisVolume()
	public abstract menosVolume()
	public abstract ligarMudo()
	public abstract desligarMudo()
	public abstract play()
	public abstract pause()


class ControleRemoto implements Controlador(){
	private int volume;
	private boolean ligado;
	private boolean tocando;

	public Construtor(){
		volume = 50;
		ligado = false;
		tocando = false;
	}

	private GETTERS AND SETTERS

	public ligar(){
		setLigado(false);
	}

	public abrirMenu(){
		escreva(getLigado());
		escreva(getVolume());

		for(int i=0; i<getVolume(); i+10){
			
		}
	}

	etc etc etc...
}

